# main.py

import asyncio
import base64
import os
import json
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime
from dotenv import load_dotenv

load_dotenv()

API_TOKEN = os.getenv("API_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

# === –ó–∞–≥—Ä—É–∑–∫–∞ credentials –∏–∑ ENV ===
def load_credentials_from_env():
    credentials_b64 = os.getenv("GOOGLE_CREDENTIALS_BASE64")
    if not credentials_b64:
        raise Exception("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è GOOGLE_CREDENTIALS_BASE64 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    credentials_json = base64.b64decode(credentials_b64).decode("utf-8")
    creds_dict = json.loads(credentials_json)
    return creds_dict

# === Google Sheets Setup ===
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive"
]

creds_dict = load_credentials_from_env()
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)

SHEET_URL = "https://docs.google.com/spreadsheets/d/1QTcOVKx6vC-f3NLolQVpbpKQsYDQOhdg8ozZpevUCeY/edit#gid=0"
try:
    sheet = client.open_by_url(SHEET_URL).sheet1
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
    sheet = None

bot = Bot(token=API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())


# === –°–æ—Å—Ç–æ—è–Ω–∏—è ===
class Feedback(StatesGroup):
    language = State()
    name = State()
    phone = State()
    birthday = State()
    consultant = State()
    rating = State()
    city = State()
    comment = State()


# === –Ø–∑—ã–∫–∏ ===
languages = {
    'ru': {
        'ask_name': 'üçΩÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω –ø–æ—Å—É–¥—ã "Iposuda"! –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?',
        'ask_phone': 'üì± –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: +77012345678):',
        'ask_birthday': 'üéÇ –£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì):',
        'consultant': 'üë®‚Äçüíº –û—Ç–ª–∏—á–Ω–æ, {name}! –ö–∞–∫–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –≤–∞–º –ø–æ–º–æ–≥–∞–ª?',
        'rate': '‚≠ê {name}, –∫–∞–∫ –±—ã –≤—ã –æ—Ü–µ–Ω–∏–ª–∏ —Ä–∞–±–æ—Ç—É –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ {consultant}? (–æ—Ç 1 –¥–æ 10)',
        'city': 'üèôÔ∏è –ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?',
        'comment': 'üí≠ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –º–Ω–µ–Ω–∏–µ–º –æ –º–∞–≥–∞–∑–∏–Ω–µ:',
        'thank_you': 'üôè {name}, —Å–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –ú—ã –ø–µ—Ä–µ–¥–∞–¥–∏–º –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É {consultant}.'
    },
    'kz': {
        'ask_name': 'üçΩÔ∏è "Iposuda" —ã–¥—ã—Å –¥“Ø–∫–µ–Ω—ñ–Ω–µ “õ–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! –°—ñ–∑–¥—ñ“£ –∞—Ç—ã“£—ã–∑ –∫—ñ–º?',
        'ask_phone': 'üì± –ë–∞–π–ª–∞–Ω—ã—Å –Ω”©–º—ñ—Ä—ñ“£—ñ–∑–¥—ñ –∂–∞–∑—ã“£—ã–∑ (–º—ã—Å–∞–ª—ã: +77012345678):',
        'ask_birthday': 'üéÇ –¢—É“ì–∞–Ω –∫“Ø–Ω—ñ“£—ñ–∑–¥—ñ –∂–∞–∑—ã“£—ã–∑ (–ö–ö.–ê–ê.–ñ–ñ–ñ–ñ —Ñ–æ—Ä–º–∞—Ç—ã–Ω–¥–∞):',
        'consultant': 'üë®‚Äçüíº –ñ–∞“õ—Å—ã, {name}! “ö–∞–π –∫–µ“£–µ—Å—à—ñ –∫”©–º–µ–∫—Ç–µ—Å—Ç—ñ?',
        'rate': '‚≠ê {name}, –∫–µ“£–µ—Å—à—ñ {consultant} –∂“±–º—ã—Å—ã–Ω 1-–¥–µ–Ω 10-“ì–∞ –¥–µ–π—ñ–Ω –±–∞“ì–∞–ª–∞“£—ã–∑:',
        'city': 'üèôÔ∏è “ö–∞–π “õ–∞–ª–∞–¥–∞–Ω—Å—ã–∑?',
        'comment': 'üí≠ –î“Ø–∫–µ–Ω —Ç—É—Ä–∞–ª—ã –ø—ñ–∫—ñ—Ä—ñ“£—ñ–∑–±–µ–Ω –±”©–ª—ñ—Å—ñ“£—ñ–∑:',
        'thank_you': 'üôè {name}, –ø—ñ–∫—ñ—Ä—ñ“£—ñ–∑–≥–µ —Ä–∞—Ö–º–µ—Ç! –ë—ñ–∑ {consultant} —Ç—É—Ä–∞–ª—ã –º–∞“õ—Ç–∞—É –∞–π—Ç–∞–º—ã–∑.'
    },
    'uz': {
        'ask_name': 'üçΩÔ∏è "Iposuda" do\'koniga xush kelibsiz! Ismingiz nima?',
        'ask_phone': 'üì± Telefon raqamingizni yozing (masalan: +998901234567):',
        'ask_birthday': 'üéÇ Tug‚Äòilgan kuningizni yozing (KK.OY.YYYY formatida):',
        'consultant': 'üë®‚Äçüíº Juda yaxshi, {name}! Qaysi konsultant yordam berdi?',
        'rate': '‚≠ê {name}, konsultant {consultant} ishini 1 dan 10 gacha baholang:',
        'city': 'üèôÔ∏è Qaysi shahardansiz?',
        'comment': 'üí≠ Do‚Äòkon haqidagi fikringizni yozing:',
        'thank_you': 'üôè {name}, fikringiz uchun rahmat! {consultant}ga ma\'lumot beramiz.'
    },
}

lang_buttons = ReplyKeyboardMarkup(keyboard=[[
    KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"),
    KeyboardButton(text="üá∞üáø “ö–∞–∑–∞“õ—à–∞"),
    KeyboardButton(text="üá∫üáø O‚Äòzbekcha")
]], resize_keyboard=True)

rating_buttons = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text=str(i)) for i in range(1, 6)],
              [KeyboardButton(text=str(i)) for i in range(6, 11)]],
    resize_keyboard=True)


# === /start ===
@dp.message(F.text == "/start")
async def cmd_start(message: types.Message, state: FSMContext):
    welcome_text = (
        "üçΩÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –æ—Ç–∑—ã–≤–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ—Å—É–¥—ã 'Iposuda'!\n\n"
        "üåç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:")
    await message.answer(welcome_text, reply_markup=lang_buttons)
    await state.set_state(Feedback.language)


@dp.message(Feedback.language)
async def set_language(message: types.Message, state: FSMContext):
    lang = ''
    if "–†—É—Å" in message.text:
        lang = 'ru'
    elif "“ö–∞–∑" in message.text:
        lang = 'kz'
    elif "O‚Äòz" in message.text:
        lang = 'uz'
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ —Å–ø–∏—Å–∫–∞.",
                             reply_markup=lang_buttons)
        return

    await state.update_data(lang=lang)
    await message.answer(languages[lang]['ask_name'], reply_markup=ReplyKeyboardRemove())
    await state.set_state(Feedback.name)


@dp.message(Feedback.name)
async def get_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    data = await state.get_data()
    await message.answer(languages[data['lang']]['ask_phone'])
    await state.set_state(Feedback.phone)


@dp.message(Feedback.phone)
async def get_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    data = await state.get_data()
    await message.answer(languages[data['lang']]['ask_birthday'])
    await state.set_state(Feedback.birthday)


@dp.message(Feedback.birthday)
async def get_birthday(message: types.Message, state: FSMContext):
    await state.update_data(birthday=message.text)
    data = await state.get_data()
    consultant_text = languages[data['lang']]['consultant'].format(name=data['name'])
    await message.answer(consultant_text)
    await state.set_state(Feedback.consultant)


@dp.message(Feedback.consultant)
async def get_consultant(message: types.Message, state: FSMContext):
    await state.update_data(consultant=message.text)
    data = await state.get_data()
    rating_text = languages[data['lang']]['rate'].format(
        name=data['name'], consultant=data['consultant'])
    await message.answer(rating_text, reply_markup=rating_buttons)
    await state.set_state(Feedback.rating)


@dp.message(Feedback.rating)
async def get_rating(message: types.Message, state: FSMContext):
    await state.update_data(rating=message.text)
    data = await state.get_data()
    await message.answer(languages[data['lang']]['city'], reply_markup=ReplyKeyboardRemove())
    await state.set_state(Feedback.city)


@dp.message(Feedback.city)
async def get_city(message: types.Message, state: FSMContext):
    await state.update_data(city=message.text)
    data = await state.get_data()
    await message.answer(languages[data['lang']]['comment'])
    await state.set_state(Feedback.comment)


@dp.message(Feedback.comment)
async def get_comment(message: types.Message, state: FSMContext):
    await state.update_data(comment=message.text)
    data = await state.get_data()

    summary = (f"üìã –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤:\n"
               f"üë§ –ò–º—è: {data['name']}\n"
               f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
               f"üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {data['birthday']}\n"
               f"üë®‚Äçüíº –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç: {data['consultant']}\n"
               f"‚≠ê –û—Ü–µ–Ω–∫–∞: {data['rating']}\n"
               f"üèôÔ∏è –ì–æ—Ä–æ–¥: {data['city']}\n"
               f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data['comment']}")

    thank_you_text = languages[data['lang']]['thank_you'].format(
        name=data['name'], consultant=data['consultant'])
    await message.answer(thank_you_text)
    await bot.send_message(ADMIN_ID, summary)

    # Google Sheets
    if sheet:
        try:
            now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            sheet.append_row([
                data['name'], data['phone'], data['birthday'],
                data['consultant'], data['rating'], data['city'],
                data['comment'], now
            ])
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")
    else:
        print("Google Sheets –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")

    await state.clear()


# === –ó–∞–ø—É—Å–∫ ===
async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
